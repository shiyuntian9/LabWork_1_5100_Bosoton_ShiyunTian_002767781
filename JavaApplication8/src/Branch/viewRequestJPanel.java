/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Branch;

import Business.Business;
import MasterBorrowDirectory.BorrowOrder;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author tianshiyun
 */
public class viewRequestJPanel extends javax.swing.JPanel {
    Business business;
    DefaultTableModel viewTableModel;
    /**
     * Creates new form viewRequestJPanel
     */
    public viewRequestJPanel() {
        initComponents();
    }
    public viewRequestJPanel(Business business) {
        initComponents();
        this.business =business;
        this.viewTableModel = (DefaultTableModel) jTable1.getModel();
        for(Branch b : this.business.getBranchDirectory().getBranchDirectory()){
            branch.addItem(b.getName());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        revenuejButton = new javax.swing.JButton();
        revenue = new javax.swing.JTextField();
        branch = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Price", "Status", "Rent Duration", "Type"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        revenuejButton.setText("Total Revenue");

        branch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                branchActionPerformed(evt);
            }
        });

        jLabel1.setText("Branch");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(revenuejButton)
                .addGap(38, 38, 38)
                .addComponent(revenue, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 77, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(65, 65, 65))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(branch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 487, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(branch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(72, 72, 72)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(revenuejButton)
                    .addComponent(revenue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(80, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void branchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_branchActionPerformed
        String name = (String) branch.getSelectedItem();
        ArrayList<BorrowOrder> orderList = new ArrayList<>();
        int total = 0;
        for(BorrowOrder o: this.business.getMasterBorrowDirectory().getMasterBorrowDirectory()){
            if(o.getBranch().toString().equals(name)){
                orderList.add(o);
                total =+ o.getPrice();
            }
            String r = total+"";
            revenue.setText(r);
        }
        if(orderList.size() > 0){
            viewTableModel.setRowCount(0);
            
            for(BorrowOrder o: orderList){
                
                Object row[]  =new Object[5];
                row[0] = o;
                row[1] = o.getPrice();
                row[2] = o.getStatus();
                row[3] = o.getDuration();
                if(!o.getBook().getName().isEmpty() && o.getMagazine().getName().isEmpty()){
                    row[4] = "Both";
                }else{
                    if(o.getBook().getName().isEmpty()){
                        row[4] = "Magazine";
                    }else{
                        row[4] = "Book";
                    }
                    
                }
                viewTableModel.addRow(row);
            }
        }else{
            System.out.println("No Book!");
        }
            
            
    }//GEN-LAST:event_branchActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> branch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField revenue;
    private javax.swing.JButton revenuejButton;
    // End of variables declaration//GEN-END:variables
}
