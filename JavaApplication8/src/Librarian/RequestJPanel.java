/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Librarian;

import Branch.Branch;
import Business.Business;
import MasterBorrowDirectory.BorrowOrder;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author tianshiyun
 */
public class RequestJPanel extends javax.swing.JPanel {
    Business business;
    DefaultTableModel viewTableModel;
    /**
     * Creates new form RequestJPanel
     */
    public RequestJPanel() {
        initComponents();
    }
    
    public RequestJPanel(Business business) {
        initComponents();
        this.business = business;
        for(Branch b : this.business.getBranchDirectory().getBranchDirectory()){
            branch.addItem(b.getName());
        }
        this.viewTableModel = (DefaultTableModel) jTable1.getModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        approveButton = new javax.swing.JButton();
        rejectButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        branch = new javax.swing.JComboBox<>();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Price", "Status", "Rental Duration", "Type"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        approveButton.setText("Approve");
        approveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                approveButtonActionPerformed(evt);
            }
        });

        rejectButton.setText("Reject");
        rejectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rejectButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Branch");

        branch.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        branch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                branchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(113, 113, 113)
                .addComponent(approveButton)
                .addGap(171, 171, 171)
                .addComponent(rejectButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 594, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(branch, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 557, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(branch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(approveButton)
                    .addComponent(rejectButton))
                .addContainerGap(33, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void branchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_branchActionPerformed
        String s = (String)branch.getSelectedItem();
        ArrayList<BorrowOrder> orderList = new ArrayList<>();
        for(BorrowOrder o: this.business.getMasterBorrowDirectory().getMasterBorrowDirectory()){
            if(o.getBranch().toString().equals(s)){
                orderList.add(o);
                
            }
        }
        
        if(orderList.size() > 0){
            viewTableModel.setRowCount(0);
            
            for(BorrowOrder o: orderList){
                
                Object row[]  =new Object[5];
                row[0] = o;
                row[1] = o.getPrice();
                row[2] = o.getStatus();
                row[3] = o.getDuration();
                if(!o.getBook().getName().isEmpty() && o.getMagazine().getName().isEmpty()){
                    row[4] = "Both";
                }else{
                    if(o.getBook().getName().isEmpty()){
                        row[4] = "Magazine";
                    }else{
                        row[4] = "Book";
                    }
                    
                }
                viewTableModel.addRow(row);
            }
        }else{
            System.out.println("No Book!");
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_branchActionPerformed

    private void approveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_approveButtonActionPerformed
            int selectedRow =jTable1.getSelectedRow();
        
        if(selectedRow >= 0 ){
            BorrowOrder bo  = (BorrowOrder)jTable1.getValueAt(selectedRow, 0);
            bo.setStatus("Approved");
        
        
               
                
        }else{
            JOptionPane.showMessageDialog(null,"Please Select a row");
            
        
        
        
    }                                        
            // TODO add your handling code here:
    }//GEN-LAST:event_approveButtonActionPerformed

    private void rejectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rejectButtonActionPerformed
    int selectedRow =jTable1.getSelectedRow();
        
        if(selectedRow >= 0 ){
            BorrowOrder bo  = (BorrowOrder)jTable1.getValueAt(selectedRow, 0);
            bo.setStatus("Rejected");
        
        
               
                
        }else{
            JOptionPane.showMessageDialog(null,"Please Select a row");
            
        
        
        
    }  
// TODO add your handling code here:
    }//GEN-LAST:event_rejectButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton approveButton;
    private javax.swing.JComboBox<String> branch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton rejectButton;
    // End of variables declaration//GEN-END:variables
}
