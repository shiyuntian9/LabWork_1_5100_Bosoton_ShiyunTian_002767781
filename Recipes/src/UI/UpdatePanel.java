/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */

package UI;

import Model.Person;
import Model.Recipe;
import java.awt.Image;
import java.io.File;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author tianshiyun
 */
public class UpdatePanel extends javax.swing.JPanel {
    
    ArrayList <Person> personList;
    String path;
    
    
    


    /** Creates new form UpdatePanel */
    public UpdatePanel() {
        initComponents();
    }
    
    public UpdatePanel(ArrayList <Person> personList) {
        initComponents();
        
        this.personList = personList;
    }
    

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        servingText = new javax.swing.JTextField();
        descriptionText = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        glutenFreeComboBox = new javax.swing.JComboBox<>();
        userName = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        userNameTxt = new javax.swing.JTextField();
        difficultLevelText = new javax.swing.JTextField();
        searchButtton = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        ingredientsText = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        nameText = new javax.swing.JTextField();
        categoryText = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        updateButton = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        Picture = new javax.swing.JLabel();
        upload = new javax.swing.JButton();

        jLabel4.setText("Gluten Free");

        glutenFreeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Yes", "No" }));
        glutenFreeComboBox.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                glutenFreeComboBoxPropertyChange(evt);
            }
        });

        userName.setForeground(new java.awt.Color(51, 51, 51));
        userName.setText("User Name");

        jLabel5.setText("Difficult Level");

        searchButtton.setBackground(new java.awt.Color(245, 72, 122));
        searchButtton.setForeground(new java.awt.Color(255, 255, 255));
        searchButtton.setText("Search");
        searchButtton.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        searchButtton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButttonActionPerformed(evt);
            }
        });

        jLabel6.setText("No. of Ingredients");

        jLabel1.setText("Recipe");

        jLabel2.setText("Name");

        jLabel7.setText("Category of Food");

        jLabel3.setText("No. of Servings");

        jLabel8.setText("Descriptiion");

        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        Picture.setText("jLabel9");

        upload.setText("Upload");
        upload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ingredientsText)
                        .addGap(215, 215, 215))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(115, 115, 115)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nameText, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(servingText, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(difficultLevelText, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(glutenFreeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(125, 282, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(searchButtton, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(descriptionText, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel7)
                                    .addGap(18, 18, 18)
                                    .addComponent(categoryText, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel8))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(updateButton)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(userName)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel4))
                                .addGap(24, 24, 24)
                                .addComponent(userNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(105, 105, 105)
                .addComponent(Picture, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(71, 71, 71)
                .addComponent(upload)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(userName)
                    .addComponent(userNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(searchButtton, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(nameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(servingText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(glutenFreeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(difficultLevelText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Picture, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(upload))
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(ingredientsText, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(categoryText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(descriptionText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(updateButton)
                .addGap(36, 36, 36))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void glutenFreeComboBoxPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_glutenFreeComboBoxPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_glutenFreeComboBoxPropertyChange

    private void searchButttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButttonActionPerformed
        
        
        
        Person personFound = findPerson();
        
        for(Recipe r: personFound.getRecipeList()){
            jComboBox1.addItem(r.getRecipeTitle());
        }
        
        


        // TODO add your handling code here:
    }//GEN-LAST:event_searchButttonActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        String itemName = (String) jComboBox1.getSelectedItem();
        
        Recipe r = findRecipe();
        //1
        if(difficultLevelText.getText().isEmpty()){
            
        }else{
            if(!difficultLevelText.getText().matches("[0-9]*(.[0-9]*)?")){
           JOptionPane.showMessageDialog(this, "Format is wrong!");
           
        }else{Double difficultLV = Double.parseDouble(difficultLevelText.getText());
        r.setDifficultyLevel(difficultLV);
            }}
        
        //2
        String gluten = (String)glutenFreeComboBox.getSelectedItem();
        if(gluten.equals(r.getIsGlutenFree().toString())){
            
        }else{
           Boolean glutenF = Boolean.parseBoolean(gluten);
        r.setIsGlutenFree(glutenF); 
        }
        
        
        //3
        if(ingredientsText.getText().isEmpty()){
            
        }else{
            String ingredientsTxt = ingredientsText.getText();
            r.setNoOfIngredients(ingredientsTxt);
        }
        //4
        if(servingText.getText().isEmpty()){
            
        }else{
            if(!servingText.getText().matches("[0-9]*")){
           JOptionPane.showMessageDialog(this, "Format is wrong!");}
            else{
            int noOfServingTxt = Integer.valueOf(servingText.getText());
            r.setNoOfServings(noOfServingTxt);}
        }
        
        //5
        String nameTxt = nameText.getText();
        if(nameText.getText().isEmpty()){
            
        }else{r.setRecipeTitle(nameTxt);}
        //6
        String catogory = categoryText.getText();
        if(categoryText.getText().isEmpty()){
            
        }else{
            r.setCategoryOfFood(catogory);
        }
        
        //7
        String description = descriptionText.getText();
        if(descriptionText.getText().isEmpty()){
            
        }else{
            r.setDescription(description);
        }
        
        if(path.equals("")){
            
        }else{
           r.setPath(path); 
        }
        
        
        // TODO add your handling code here:
    }//GEN-LAST:event_updateButtonActionPerformed

    private void uploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadActionPerformed
        JFileChooser browseImageFile = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("MAGES", "png","jpg","jpeg");
        browseImageFile.addChoosableFileFilter(filter); 
        int showOpenDialogue = browseImageFile.showOpenDialog((null));
        if(showOpenDialogue == JFileChooser.APPROVE_OPTION){
            File selectedImageFile = browseImageFile.getSelectedFile();
            String selectedImagePath = selectedImageFile.getAbsolutePath();
            path=selectedImagePath;
            JOptionPane.showMessageDialog(null, selectedImagePath);
            ImageIcon imageI = new ImageIcon(selectedImagePath);
            
            Image image = imageI.getImage().getScaledInstance(Picture.getWidth(), Picture.getHeight(), Image.SCALE_SMOOTH);
            Picture.setIcon(new ImageIcon(image));
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_uploadActionPerformed


    public Recipe findRecipe(){
        Person personFound2 = findPerson();
        Recipe rr = new Recipe();
        for(Recipe r:personFound2.getRecipeList()){
            if(jComboBox1.getSelectedItem().equals(r.getRecipeTitle())){                
            } rr = r;
        }return rr;
    }
    
    public Person findPerson(){
        Person pp = new Person();
        for(Person p:personList){
            if(userNameTxt.getText().equals(p.getUserName())){
                pp = p;
            }System.out.println(pp.getUserName());
             System.out.println(userNameTxt.getText());
        }return pp;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Picture;
    private javax.swing.JTextField categoryText;
    private javax.swing.JTextField descriptionText;
    private javax.swing.JTextField difficultLevelText;
    private javax.swing.JComboBox<String> glutenFreeComboBox;
    private javax.swing.JTextField ingredientsText;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JTextField nameText;
    private javax.swing.JButton searchButtton;
    private javax.swing.JTextField servingText;
    private javax.swing.JButton updateButton;
    private javax.swing.JButton upload;
    private javax.swing.JLabel userName;
    private javax.swing.JTextField userNameTxt;
    // End of variables declaration//GEN-END:variables

}
